---
// layout: #head, #navigation, #main
import { Font } from 'astro:assets';
import '../styles/global.css';
import Logo from '../assets/guava.svg';
import ID from '../assets/kio.svg';
import GuavaSprites from '../assets/guava-sprites.svg';

interface Props {
  title?: string;
  tag?: string;
  isHome?: boolean;
}
const { title, tag, isHome } = Astro.props;
const siteTitle = isHome ? 'Kyle IO, a creative journal' : `${title} · · K:IO`;
---

<!doctype html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="generator" content={Astro.generator} />
    <title>{siteTitle}</title>
    <meta name="description" content="A collection of things I've made written, and that spark my curiosity" />
    <meta name="theme-color" content="#ff8888" />
    <link rel="alternate" type="application/rss+xml" title="Kyle IO, a creative journal" href={new URL("rss.xml", Astro.site)} />

    <meta property="og:type" content="website">
    <meta property="og:url" content="https://kyleio.com/">
    <meta property="og:title" content="Kyle IO, a creative journal">
    <meta property="og:description" content="A collection of things I've made written, and that spark my curiosity">
    <meta property="og:image" content="/og-image.png">

    <Font cssVariable="--font-plex-mono" preload />
    <Font cssVariable="--font-plex-sans" preload />
    <Font cssVariable="--font-custom" preload />
  </head>
  <body class={isHome ? 'home' : ''}>
    <a href="#main-content" class="skip-link">Skip to main content</a>
    <div class="contentful">
      <nav class="main-nav" aria-label="Main navigation">
        <div class="nav-left">
          <a href="/" title="Home" aria-label="Home">
            <GuavaSprites style="display:none" />
            <Logo class="guava" />
          </a>
          {tag && <span class="nav-separator"> / </span>}
          {tag && <div><a href={`/t/${tag}`} class={`small tag ${tag}`} title={`View all ${tag}s`} aria-label={`View all ${tag}s`}>{tag}s</a></div>}
        </div>
      </nav>
      <main id="main-content">
        <slot />
        <div>{tag && <div><span class="small secondary mr-0.5">View more </span><a href={`/t/${tag}`} class={`small tag ${tag}`} title={`View all ${tag}s`} aria-label={`View all ${tag}s`}>{tag}s</a></div>}</div>
      </main>
    </div>
    <footer>
        <div class="small">
          <p><a href="/">Home</a> · · <a href="/p/about/">About</a> · · <a href="/p/now/">Now</a></p>
          <p>Elsewhere: <a href="https://mastodon.online/@kylejohnston">Mastodon</a> · · <a href="https://bsky.app/profile/kylejohnston.bsky.social">Bluesky</a> · · <a href="https://www.linkedin.com/in/kylejohnston/">LinkedIn</a></p>
          <p><a href="/rss.xml">RSS</a> · · <a href="https://github.com/kylejohnston/kyleio-blog">GitHub</a> · · <a href="https://v1.kyleio.com/">V1</a></p>
        </div>
        <div class="">
          <ID>
        </div>
    </footer>
  </body>
</html>
<style>
  .contentful {
    background: var(--back);
    width: calc(100vw - 12px);
    margin: 0 auto;
    padding-bottom: calc(var(--base) * 8);
    border-radius: 0 0 8px 8px;
    min-height: 88vh;
  }
  footer {
    max-width: 808px;
    margin: 0 auto;
    display: flex;
    flex-direction: row;
    justify-content: space-between;
    align-items: top;
    background: var(--cool);
    color: var(--color-text);
    padding: calc(var(--base) * 4);
    gap: var(--base);
  }
  footer p {
    margin-block: auto;
  }
  footer a:link, footer a:visited {
    color: var(--color-text);
    text-decoration: none;
  }
</style>

<!-- Add this script before closing body tag -->
<script>
  const shapes = ['circle', 'hex', 'grid'];
  const logo = document.querySelector('.guava use');
  let isHovering = false;
  
  if (logo) {
    const parent = logo.parentElement;
    
    parent.addEventListener('mouseenter', () => {
      if (!isHovering) {
        isHovering = true;
        const randomShape = shapes[Math.floor(Math.random() * shapes.length)];
        logo.setAttribute('href', `#${randomShape}`);
      }
    });

    parent.addEventListener('mouseleave', () => {
      isHovering = false;
      logo.setAttribute('href', '#rect');
    });
  }
</script>
